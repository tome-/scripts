#!/bin/bash
# name:    buxter
# author:  grimi
# about:   build ArchLinux pkg from fm menu
# license: GNU GPL v3
# require: makepkg & updpkgsums (parts of pacman)
# require: grep, wc (part of coreutils), xterm


BLDRED='\e[1;31m'
BLDWHI='\e[1;37m'
BLDYEL='\e[1;33m'
TXTRES='\e[0m'

NAME="${0##*/}"

ANYES=0
ANNOP=1

MKPKGCMD="makepkg -s"
MKSRCMD="makepkg -Sf"
UPDSUMCMD="updpkgsums"

PKGBNAME="PKGBUILD"

ARGSLINE=""


case ${LANG%_*} in
   pl)
      MSG_US="SKŁADNIA"
      MSG_TR="uruchom w xterm"
      MSG_SR="pytaj, czy generować archiwum źródłowe"
      MSG_HE="ten tekst"
      MSG_EX="Pakiet już istnieje. Zbudować ponownie"
      ANS_EX="t"
      MSG_CC="Budować z ccache"
      MSG_SO="Budować archiwum źródłowe"
      ANS_SO="t"
      MSG_UC="Zaktualizować sumy kontrolne źródeł"
      ANS_UC="t"
      MSG_UU="pytaj, czy aktualizować sumy kontrolne źródeł"
      ANS_TB=(t n)
      MSG_Yn="[T/n]"
      MSG_yN="[t/N]"
   ;;
   *)
      MSG_US="USAGE"
      MSG_TR="exec in xterm"
      MSG_SR="ask to generate a source-only tarball"
      MSG_HE="this message"
      MSG_EX="Package already exists. Build again"
      ANS_EX="y"
      MSG_CC="Build with ccache"
      MSG_SO="Build source-only tarball"
      ANS_SO="y"
      MSG_UC="Update checksum for source"
      ANS_UC="y"
      MSG_UU="ask to update sources checksums"
      ANS_TB=(y n)
      MSG_Yn="[Y/n]"
      MSG_yN="[y/N]"
   ;;
esac


usage() {
   echo -e "${BLDRED}==> ${BLDWHI}${MSG_US}: ${BLDYEL}[-tush] ${BLDRED}[PKGBUILD]${TXTRES}"
   echo -e "    ${BLDWHI}-t${TXTRES}    ${MSG_TR}"
   echo -e "    ${BLDWHI}-u${TXTRES}    ${MSG_UU}"
   echo -e "    ${BLDWHI}-s${TXTRES}    ${MSG_SR}"
   echo -e "    ${BLDWHI}-h${TXTRES}    ${MSG_HE}"
   exit 1
}


while [[ ${1:0:1} == "-" ]]; do
   i=1
   while [[ ${1:$i:1} ]]; do
      case "${1:$i:1}" in
         t)    TERMODE=1 ;;
         u)    UPDSUMS=1;   ARGSLINE+="-u " ;;
         s)    GENSOURCE=1; ARGSLINE+="-s " ;;
         h)    SHOWUSAGE=1; ARGSLINE+="-h " ;;
      esac
      (( i++ ))
   done
   shift
done


if [[ -n $1 ]]; then
   ARGSLINE+="'$1'"
fi


if [[ -n $TERMODE ]]; then
   exec xterm -fg gray -bg black -T "::: $NAME :::" -e "$0 $ARGSLINE; echo -e '\n\n${BLDYEL}:::${BLDWHI}  ENTER  ${BLDYEL}:::' ; read"
fi


if [[ -n $SHOWUSAGE ]]; then
   usage
fi

if [[ -z $1 ]]; then
   if [[ ! -f PKGBUILD ]]; then
      usage
   fi
else
   PKGBNAME="$1"
fi


if [[ $(grep -w  -e "pkgname=.*" -e "pkgver=.*" -e "pkgrel=.*" -e "package.*(" "$PKGBNAME"|wc -l) -lt 4 ]]; then
   usage
fi


source /etc/makepkg.conf
if [[ -f ${XDG_CONFIG_HOME:-$HOME/.config}/pacman/makepkg.conf ]]; then
   source "${XDG_CONFIG_HOME:-$HOME/.config}/pacman/makepkg.conf"
elif [[ -f $HOME/.makepkg.conf ]]; then
   source "$HOME/.makepkg.conf"
fi

if [[ ${PKGBNAME%/*} != $PKGBNAME ]]; then
   cd "${PKGBNAME%/*}"
fi

source "$PKGBNAME"

if [[ ${arch[0]} = "any" ]]; then
   ARCHPKG="any"
else
   ARCHPKG="$CARCH"
fi

PACKAGE="${pkgname[0]}-${epoch:+$epoch:}${pkgver}-${pkgrel}-${ARCHPKG}${PKGEXT}"


if [[ -n $UPDSUMS ]]; then
   echo -ne "\n${BLDYEL}==>${BLDWHI} ${MSG_UC} ? ${MSG_yN} ${TXTRES}"
   read ures
   if [[ ${ures,,} == $ANS_UC ]]; then
      $UPDSUMCMD
   fi
   unset ures
fi

if [[ -f ${PACKAGE} ]]; then
   echo -e "\n${BLDRED}==> ${BLDYEL}${PACKAGE}"
   echo -ne "${BLDRED}==>${BLDWHI} ${MSG_EX} ? ${MSG_yN} ${TXTRES}"
   read bres
   if [[ ${bres,,} == $ANS_EX ]]; then
      MKPKGCMD+="f"
   else
      MKPKGCMD=""
   fi
   unset bres
fi

if [[ -n $MKPKGCMD && $ARCHPKG != "any" && -x /usr/bin/ccache ]]; then
   for x in ${BUILDENV[@]}; do
      if [[ $x == ccache ]]; then
         MSG_CC="${BLDYEL}==>${BLDWHI} ${MSG_CC} ?"
         if [[ -z $CCACHE_DISABLE ]]; then
            echo -en "\n${MSG_CC} ${MSG_Yn} ${TXTRES}"
            read cres
            if [[ ${cres,,} == ${ANS_TB[$ANNOP]} ]]; then
               export CCACHE_DISABLE=1
            else
               unset CCACHE_DISABLE
            fi
         else
            echo -en "\n${MSG_CC} ${MSG_yN} ${TXTRES}"
            read cres
            if [[ ${cres,,} == ${ANS_TB[$ANYES]} ]]; then
               unset CCACHE_DISABLE
            else
               export CCACHE_DISABLE=1
            fi
         fi
         unset cres
         break
      fi
   done
fi

if [[ -n $MKPKGCMD ]]; then
   $MKPKGCMD
fi

if [[ -n $GENSOURCE ]]; then
   echo -en "\n${BLDYEL}==>${BLDWHI} ${MSG_SO} ? ${MSG_yN} ${TXTRES}"
   read sres
   if [[ ${sres,,} == $ANS_SO ]]; then
      $MKSRCMD
   fi
   unset sres
fi


if [[ -d $BUILDDIR ]]; then
   [[ -d $BUILDDIR/${pkgname[0]} ]] && rm -fr "$BUILDDIR/${pkgname[0]}"
else
   [[ -d src ]] && rm -fr src
   [[ -d pkg ]] && rm -fr pkg
fi


# vim: set et sts=3 sw=3 ts=3 :
