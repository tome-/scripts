#!/bin/bash
# name:    buxter
# author:  grimi
# abot:    build ArchLinux pkg from fm menu
# require: makepkg (part of pacman),xterm

BLDRED='\e[1;31m'
BLDWHI='\e[1;37m'
BLDYEL='\e[1;33m'
TXTRES='\e[0m'

NAME="${0##*/}"
ANYES=0
ANNOP=1

case ${LANG%_*} in
   pl)
      MSG_US="SKŁADNIA"
      MSG_TR="uruchom w xterm"
      MSG_DG="nie wykonuj, pokaż linie komend"
      MSG_SH="buduj w /dev/shm"
      MSG_SR="generuj archiwum źródłowe"
      MSG_HE="ten tekst"
      MSG_EX="Pakiet już istnieje. Zbudować ponownie"
      ANS_EX="t"
      MSG_32="Budować pakiet 32 bitowy"
      ANS_32="t"
      MSG_CC="Budować z ccache"
      ANS_TB=(t n)
      MSG_Yn="[T/n]"
      MSG_yN="[t/N]"
   ;;
   *)
      MSG_US="USAGE"
      MSG_TR="exec in xterm"
      MSG_DG="don't exec, show cmd line"
      MSG_SH="build in /dev/shm"
      MSG_SR="generate a source-only tarball"
      MSG_HE="this message"
      MSG_EX="Package already exists. Build again"
      ANS_EX="y"
      MSG_32="Build 32 bit package"
      ANS_32="y"
      MSG_CC="Build with ccache"
      ANS_TB=(y n)
      MSG_Yn="[Y/n]"
      MSG_yN="[y/N]"
   ;;
esac
MSG_EX="${MSG_EX} ? ${MSG_yN}"
MSG_32="${MSG_32} ? ${MSG_yN}"



usage() {
   echo -e "${BLDRED}==> ${BLDWHI}${MSG_US}: ${BLDYEL}[-tsgdh] ${BLDRED}[PKGBUILD]${TXTRES}"
   echo -e "    ${BLDWHI}-t${TXTRES}    ${MSG_TR}"
   echo -e "    ${BLDWHI}-s${TXTRES}    ${MSG_SH}"
   echo -e "    ${BLDWHI}-g${TXTRES}    ${MSG_SR}"
   echo -e "    ${BLDWHI}-d${TXTRES}    ${MSG_DG}"
   echo -e "    ${BLDWHI}-h${TXTRES}    ${MSG_HE}"
   exit 1
}


while [ "${1:0:1}" == "-" ]; do
   i=1
   while [ "${1:$i:1}" ]; do
      case "${1:$i:1}" in
         t)    TERMODE=1 ;;
         s)    BUILDSHM=1 ;;
         g)    GENSOURCE=1 ;;
         d)    DEBUGMODE=1 ;;
         h)    usage ;;
      esac
      (( i++ ))
   done
   shift
done


if [ ! -f PKGBUILD ]; then
   if [ -z "$1" ]; then
      usage
   else
      [ "${1##*/}" != "PKGBUILD" ] && usage
   fi
fi

source /etc/makepkg.conf
[ -f ~/.makepkg.conf ] && source ~/.makepkg.conf

[ "${1%/*}" != "$1" ] && cd "${1%/*}"

source PKGBUILD

[ "${arch[0]}" = "any" ] && archpkg="any" || archpkg="$CARCH"

pkgdef="package='${pkgname[0]}-${pkgver}-${pkgrel}-${archpkg}${PKGEXT}'"


if [ -n "$BUILDSHM" ]; then
   [ -d src ] && rm -fr src
   BUILDSHM="/dev/shm/${pkgname[0]}-${NAME}-src"
   [ -d "$BUILDSHM" ] && rm -fr "$BUILDSHM"
   mkdir -p "$BUILDSHM"
   ln -s "$BUILDSHM" src
fi


if [ "${archpkg}" == "x86_64" ] && [ "${arch[0]}" == "i686" ]; then
   if [ -n "$(pacman -Qq gcc-multilib)" ]; then
      pkgdef="${pkgdef} ; echo ; echo -en '${BLDYEL}==> ${BLDWHI}${MSG_32} ${TXTRES}' ; \
         read res32 ; [ \"\${res32,,}\" == '$ANS_32' ] && bit32='linux32 ' && \
         package='${pkgname}-${pkgver}-${pkgrel}-i686${PKGEXT}'"
   fi
fi

if [ "$archpkg" != "any" ]; then
   for x in ${BUILDENV[@]}; do
      if [ "$x" == "ccache" ]; then
         if [ -z "$CCACHE_DISABLE" ]; then
            ccvar='&& export CCACHE_DISABLE=1 || unset CCACHE_DISABLE'
            anscc="${ANS_TB[$ANNOP]}"
            MSG_CC="${MSG_CC} ? ${MSG_Yn}"
         else
            ccvar='&& unset CCACHE_DISABLE || export CCACHE_DISABLE=1'
            anscc="${ANS_TB[$ANYES]}"
            MSG_CC="${MSG_CC} ? ${MSG_yN}"
         fi
         cmd="${cmd}echo -en '${BLDYEL}==> ${BLDWHI}${MSG_CC} ${TXTRES}' ; \
               read cres ; [ \"\${cres,,}\" == '$anscc' ] $ccvar ;"
         break
      fi
   done
fi

if [ -n "$GENSOURCE" ]; then
   cmd="${cmd} echo ; makepkg --source -f ;"
fi

cmd="${pkgdef} ; if [ -f \"\${package}\" ]; then echo -e \"${BLDRED}==> ${BLDYEL}\${package}\" ; \
   echo -ne '${BLDRED}==> ${BLDWHI}${MSG_EX} ${TXTRES}' ; read bres ; \
   [ \"\${bres,,}\" == '$ANS_EX' ] && (${cmd} echo ; \${bit32}makepkg -fcs) ; else (${cmd} echo ; \${bit32}makepkg -cs) ; fi"


if [ -n "$DEBUGMODE" ]; then
   echo -e "$cmd"
elif [ -z "$TERMODE" ]; then
   eval "$cmd"
else
   xterm -fg gray -bg black -T "::: $NAME :::" -e "$cmd ; echo -e '\n\n${BLDYEL}:::${BLDWHI}  ENTER  ${BLDYEL}:::' ; read"
fi


[ -n "$BUILDSHM" ] && rm -fr "$BUILDSHM"
[ -h src ] && rm -f src


